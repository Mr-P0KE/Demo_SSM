<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           https://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           https://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/tx
                           https://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop
                           https://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/cache
                           http://www.springframework.org/schema/cache/spring-cache.xsd">
    <!--   1. spring配置文件，主要配置和业务逻辑有关的-->
    <context:component-scan base-package="com.rsk">
        <!--        不扫描控制器-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <context:property-placeholder location="classpath:dbconfig.properties"/>
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--    2.配置mybatis-->
    <bean  id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--        mybatis配置文件位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--        数据源-->
        <property name="dataSource" ref="pooledDataSource"/>
        <!--        mapper文件位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

<!--    配置一个可以执行批量操作的sqlSession-->
    <bean  id="session" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory"  ref="sqlSessionFactory"/>
<!--        批量-->
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>


    <!--    3.配置扫描器，将mybatis接口实现添加到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.rsk.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--    4.事务控制-->
    <bean  id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--        事务控制数据源-->
        <property name="dataSource" ref="pooledDataSource"/>
    </bean>
    <aop:config>
        <!--        切入点-->
        <aop:pointcut id="txPoint" expression="execution(* com.rsk.service..*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
    <!--    配置事务增强 事务如何切入-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--            所有方法-->
            <tx:method name="*"/>
            <!--            以get开头的方法-->
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>





</beans>